{"version":3,"sources":["components/ProjectBox/ProjectBox.js","views/Home.js","components/Sidebar/Sidebar.js","views/ProjectList.js","views/NotFound.js","components/Navbar/Navbar.js","views/themes/themes.js","App.js","serviceWorker.js","index.js"],"names":["ProjectBox","bestProjects","slideProperties","duration","transitionDuration","infinite","indicators","arrows","pauseOnHover","scheme","useContext","ThemeContext","className","style","homePageTitle","title","homePageProfessor","professor","Object","values","projects","map","project","key","id","description","images","src","alt","Home","MenuItem","currSemester","semester","classes","useInnerStyles","useState","open","setOpen","projs","setProjects","useEffect","forEach","curr","push","ListItem","button","onClick","menuItem","ListItemIcon","menuItemIcon","color","ListItemText","primary","length","keys","Collapse","in","timeout","unmountOnExit","Divider","List","component","disablePadding","href","content","inset","generateCollapseMenus","Menu","items","useStyles","appMenu","semesters","makeStyles","theme","root","display","drawerPaper","position","whiteSpace","width","paddingTop","spacing","paddingBottom","background","overflow","height","flexGrow","container","createStyles","navList","Sidebar","CssBaseline","Drawer","variant","paper","Semester","props","semesterTitleColor","data","prof","Projects","name","Project","hrStyle","projectHRColor","projectDescText","subtitleText","proj","index","teamNameColor","tas","ta","members","member","image","Image","TransitionsModal","toggleState","setToggle","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropProps","Fade","ProjectList","marginLeft","marginTop","sort","sem1","sem2","sem1Attr","split","sem2Attr","season","year","parseInt","getSemesters","sem","NotFound","Navbar","schemes","setSchemes","localStorage","getItem","JSON","parse","currToggle","toggleColor","button1","button2","button3","button4","hover","setHover","second","first","setItem","stringify","backgroundColor","buttonHoverColor","buttonColor","buttonTextColor","doHover","idx","assign","doUnhover","onMouseEnter","onMouseLeave","to","createContext","App","_schemes","_setSchemes","Provider","value","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.078af45e.chunk.js","sourcesContent":["import React, {useContext} from 'react';\r\nimport {Slide} from \"react-slideshow-image\";\r\nimport './ProjectBox.css'\r\nimport {ThemeContext} from \"../../App\";\r\n\r\n\r\nfunction ProjectBox({bestProjects}) {\r\n\r\n    const slideProperties = {\r\n        duration: 5000,\r\n        transitionDuration: 500,\r\n        infinite: true,\r\n        indicators: true,\r\n        arrows: true,\r\n        pauseOnHover: true\r\n    };\r\n\r\n    const scheme = useContext(ThemeContext);\r\n\r\n    return (\r\n        <div className='mt-10'>\r\n            <div style={{'font-size': '24px', 'lineHeight': '12px'}} className='italic text-center text-white font-medium mb-5'>\r\n                <p style={{'color': scheme.homePageTitle}}>{bestProjects.title}</p>\r\n                <p style={{'color': scheme.homePageProfessor}}>{bestProjects.professor}</p>\r\n            </div>\r\n            {\r\n                Object.values(bestProjects.projects).map((project) => {\r\n                    return (\r\n                        <div key={project.id}\r\n                             className=\"p-3 m-10 project-card transition duration-300 ease-in-out border-transparent border border-solid hover:border-gray-400\">\r\n                            <div className=\"project-description pb-5 pr-5\">\r\n                                {project.description}\r\n                            </div>\r\n\r\n                            <div className=\"project-slide\">\r\n                                <Slide {...slideProperties}>\r\n                                    {\r\n                                        project.images.map((src) =>\r\n                                            <div>\r\n                                                <img className=\"project-image\" src={src} alt=\"project\"/>\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                </Slide>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectBox;\r\n","import React from 'react';\r\nimport ProjectBox from '../components/ProjectBox/ProjectBox';\r\nimport bestProjects from '../assets/bestProjects.json';\r\n\r\nfunction Home() {\r\n    return <ProjectBox bestProjects={bestProjects}/>\r\n}\r\n\r\nexport default Home;","import React, {useContext, useEffect, useState} from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\n\r\nimport IconExpandLess from '@material-ui/icons/ExpandLess'\r\nimport IconExpandMore from '@material-ui/icons/ExpandMore'\r\n\r\nimport IconLibraryBooks from '@material-ui/icons/LibraryBooks'\r\nimport {createStyles} from \"@material-ui/core\";\r\nimport {ThemeContext} from \"../../App\";\r\n\r\nfunction MenuItem({semester: currSemester}) {\r\n    const classes = useInnerStyles();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [projs, setProjects] = useState({});\r\n    useEffect(() => {\r\n        const projs = {};\r\n        currSemester.projects.forEach(curr => {\r\n            if (projs[curr[\"project-name\"]])\r\n                projs[curr['project-name']].push(curr);\r\n            else\r\n                projs[curr['project-name']] = [curr];\r\n        });\r\n        setProjects(projs);\r\n    }, []);\r\n\r\n    function handleClick() {\r\n        setOpen(!open);\r\n    }\r\n    const scheme = useContext(ThemeContext);\r\n\r\n    return (\r\n        <div>\r\n            <ListItem button onClick={handleClick} className={classes.menuItem}>\r\n                <ListItemIcon className={classes.menuItemIcon} style={{color: scheme.menuItemIcon}}>\r\n                    <IconLibraryBooks/>\r\n                </ListItemIcon>\r\n                <ListItemText primary={currSemester.semester}/>\r\n                {open ? <IconExpandLess/> : <IconExpandMore/>}\r\n            </ListItem>\r\n            {\r\n                currSemester.projects.length > 0 ?\r\n                    generateCollapseMenus(projs, classes, open, currSemester.semester) : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction generateCollapseMenus(projects, classes, open, semester) {\r\n    return (\r\n        <div>\r\n            {\r\n                Object.keys(projects).map(project => {\r\n                    return <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                        <Divider/>\r\n                        <List component=\"div\" disablePadding>\r\n                            <ListItem button component='a' href={'#' + semester + project} className={classes.content}>\r\n                                <ListItemText inset primary={project}/>\r\n                            </ListItem>\r\n                        </List>\r\n                    </Collapse>\r\n                })\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Menu({items}) {\r\n    const classes = useStyles();\r\n    return <List component=\"nav\" className={classes.appMenu} disablePadding>\r\n        {\r\n            items.semesters.map(semester => <MenuItem semester={semester}/>)\r\n        }\r\n    </List>;\r\n}\r\n\r\nfunction Sidebar({items}) {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className=\"h-full sticky top-0\">\r\n            <CssBaseline/>\r\n            <Drawer className=\"h-full sticky top-0\" variant='permanent' classes={{\r\n                paper: classes.drawerPaper,\r\n            }}>\r\n                <Menu className=\"h-full sticky top-0\" items={items}/>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    drawerPaper: {\r\n        position: 'absolute',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n        background: '#282b30',\r\n        color: '#fff',\r\n        overflow: 'hidden',\r\n        height: '100vh'\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n        overflow: 'hidden'\r\n    },\r\n}));\r\n\r\nconst useInnerStyles = makeStyles(theme =>\r\n    createStyles({\r\n        appMenu: {\r\n            width: '100%',\r\n            overflow: 'hidden'\r\n        },\r\n        navList: {\r\n            width: drawerWidth,\r\n            overflow: 'hidden'\r\n\r\n        },\r\n        menuItem: {\r\n            width: drawerWidth,\r\n            overflow: 'hidden'\r\n        },\r\n        menuItemIcon: {\r\n            overflow: 'hidden'\r\n        },\r\n    }),\r\n);\r\n\r\nexport default Sidebar;\r\n","import React, {useContext, useEffect, useState} from 'react';\r\nimport SideBar from '../components/Sidebar/Sidebar';\r\nimport projects from '../assets/projs.json';\r\nimport '../css/tailwind.css';\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {ThemeContext} from \"../App\";\r\n\r\nfunction getSemesters() {\r\n    let semesters = projects.semesters;\r\n    semesters.sort((sem1, sem2) => {\r\n        if (!sem2) return true;\r\n\r\n        const sem1Attr = sem1.semester.split(\" \");\r\n        const sem2Attr = sem2.semester.split(\" \");\r\n        const semesters = {\r\n            \"1\": {\r\n                season: sem1Attr[0],\r\n                year: parseInt(sem1Attr[1])\r\n            },\r\n            \"2\": {\r\n                season: sem2Attr[0],\r\n                year: parseInt(sem2Attr[1])\r\n            }\r\n        };\r\n\r\n        if (semesters['1'].year > semesters['2'].year)\r\n            return -1;\r\n        else if (semesters['1'].year === semesters['2'].year)\r\n            return (semesters['2'].season === \"Spring\" || semesters[\"1\"].season === \"Fall\") ? -1 : 1; // if semester 2 is spring or semester 1 is fall, then we want to sort semester 1 higher\r\n\r\n        return 1;\r\n    });\r\n    return [...semesters];\r\n}\r\n\r\nfunction ProjectList() {\r\n\r\n    return (\r\n        <>\r\n            <SideBar items={projects}/>\r\n            <div style={{overflow: \"hidden\"}}>\r\n                <div style={{\r\n                    width: 'calc(100vw - 240px)',\r\n                    marginLeft: '240px',\r\n                    marginTop: '73.25px',\r\n                    overflow: \"hidden\"\r\n                }}>\r\n                    {\r\n                        getSemesters().map(sem => <Semester data={sem}/>)\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst Semester = (props) => {\r\n    const scheme = useContext(ThemeContext);\r\n    return (\r\n        <div style={{\r\n            'backgroundColor': '#1e2124', 'maxWidth': '75%', 'marginLeft': '12%',\r\n            'marginRight': '2em',\r\n            'marginTop': '2em',\r\n            'color': scheme.semesterTitleColor,\r\n            'paddingTop': '0.05em'\r\n        }}>\r\n            {/*University of Florida CEN 3031 Software Engineering Class Web Application Projects */}\r\n\r\n            <h1 style={{'text-align': 'center', \"text-shadow\": \"0 1px 2px #000\"}} className='pr-4 pl-4'>{props.data.semester}</h1>\r\n            <h3 style={{'text-align': 'center', \"text-shadow\": \"0 1px 2px #000\"}} className='pr-4 pl-4'>{props.data.professor}</h3>\r\n            <Projects projects={props.data.projects} semester={props.data.semester} prof={props.data.professor}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Projects = (props) => {\r\n    const [projs, setProjects] = useState({});\r\n    useEffect(() => {\r\n        const projs = {};\r\n        props.projects.forEach(curr => {\r\n            if (projs[curr[\"project-name\"]])\r\n                projs[curr['project-name']].push(curr);\r\n            else\r\n                projs[curr['project-name']] = [curr];\r\n        });\r\n        setProjects(projs);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                Object.keys(projs).length > 0 ? Object.keys(projs).map(key => <Project name={key}\r\n                                                                                       semester={props.semester}\r\n                                                                                       prof={props.prof}\r\n                                                                                       description={projs[key][0]['description']}\r\n                                                                                       data={projs[key]}/>) : null\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nconst Project = (props) => {\r\n    const scheme = useContext(ThemeContext);\r\n    const hrStyle = {\r\n        'border': 0,\r\n        'height': '1px',\r\n        'background-image': scheme.projectHRColor\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div style={{\r\n                'display': 'block',\r\n                'backgroundColor': '#282b30',\r\n                'padding': '20px',\r\n                'color': scheme.projectDescText,\r\n                \"text-shadow\": \"0 1px 2px rgba(0,0,0,0.4)\"\r\n            }}>\r\n                <h2 id={props.semester + props.name}><span style={{'color': scheme.subtitleText, 'line-height': '0px'}}>Project Name:</span> {props.name}\r\n                </h2>\r\n                <h4><span\r\n                    style={{'color': scheme.subtitleText, 'fontWeight': 'bold'}}>Description: </span>\r\n                </h4>\r\n                <p className='pl-5 pr-5'>{props.description}</p>\r\n                {\r\n                    props.data.map((proj, index) => {\r\n                        return <div style={{'color': 'white'}}>\r\n                            <div className='text-center justify-center items-center content-center'>\r\n                                <div className='pt-6'>\r\n                                    <p style={{\"font-size\": \"24px\", \"text-shadow\": \"0px 0px 2px rgba(0,0,0,0.6)\", \"color\": scheme.teamNameColor}}\r\n                                        className='underline border border-solid border-b-0 border-t-0 border-l border-r'>Team {index + 1}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{'textIndent': '2.5em', 'lineHeight': '0.3em', 'marginTop': '2.5em'}}>\r\n                                Teaching Assistants:\r\n                                <div style={{'textIndent': '3em', 'lineHeight': '1.5em'}}>\r\n                                    <ul>\r\n                                        {\r\n                                            proj.tas.map(ta => <li>{ta}</li>)\r\n                                        }\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div style={{'textIndent': '2.5em'}}>\r\n                                Group Members:\r\n                                <div style={{'textIndent': '3em', 'lineHeight': '1.5em'}}>\r\n                                    <ul>\r\n                                        {\r\n                                            proj.members.map(member => <li>{member}</li>)\r\n                                        }\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                'width': '100%',\r\n                                'text-align': 'center',\r\n                                'display': 'grid',\r\n                                'marginTop': '2em',\r\n                                'grid-template-columns': '33.3333% 33.3333% 33.3333%',\r\n                                'grid-gap': '0.5em',\r\n                            }} className='justify-center'>\r\n                                {\r\n                                    proj.images.map(image => <Image className='w-full' image={image}/>)\r\n                                }\r\n                            </div>\r\n                            <br/>\r\n                            <hr style={hrStyle}/>\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nconst Image = ({image}) => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    return <>\r\n        <div onClick={() => setOpen(!open)}\r\n             style={{'height': '20vh', 'background-image': `url(\\'${image}\\')`}}\r\n             className='w-full bg-cover overflow-visible transition duration-300 ease-in-out cursor-pointer border-transparent border border-solid hover:border-gray-400'\r\n             alt='Not found.'/>\r\n        <div className='absolute'>\r\n            <TransitionsModal toggleState={open} image={image} setToggle={setOpen}/>\r\n        </div>\r\n    </>;\r\n};\r\n\r\nfunction TransitionsModal({toggleState, image, setToggle}) {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setToggle(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setOpen(toggleState);\r\n    }, [toggleState]);\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className='flex items-center justify-center'\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={open}>\r\n                    <div className='focus:outline-none shadow-xl'>\r\n                        <img\r\n                            className='transition duration-1000 ease-in-out border-transparent border border-solid border-t-0 border-l-0 border-r-0 hover:border-gray-400 w-full h-full'\r\n                            src={image}/>\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectList;\r\n","const NotFound = () => {\r\n    return \"Page not found\"\r\n}\r\n\r\nexport default NotFound;","import React, {useContext, useEffect, useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './Navbar.css';\r\nimport {ThemeContext} from \"../../App\";\r\n\r\nconst Navbar = ({schemes, setSchemes}) => {\r\n    const [toggleColor, setToggleColor] = useState(localStorage.getItem('toggleState') ? JSON.parse(localStorage.getItem('toggleState')).currToggle : false);\r\n    const [hover, setHover] = useState({\r\n        button1: false,\r\n        button2: false,\r\n        button3: false,\r\n        button4: false\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (toggleColor) {\r\n            setSchemes(schemes.second);\r\n        } else {\r\n            setSchemes(schemes.first);\r\n        }\r\n        localStorage.setItem('toggleState', JSON.stringify({currToggle: toggleColor}));\r\n    }, [toggleColor]);\r\n\r\n    const scheme = useContext(ThemeContext);\r\n\r\n    const style = {\r\n        button1: {\r\n            backgroundColor: hover.button1 ? scheme.buttonHoverColor : scheme.buttonColor,\r\n            color: scheme.buttonTextColor\r\n        },\r\n        button2: {\r\n            backgroundColor: hover.button2 ? scheme.buttonHoverColor : scheme.buttonColor,\r\n            color: scheme.buttonTextColor\r\n        },\r\n        button3: {\r\n            backgroundColor: hover.button3 ? scheme.buttonHoverColor : scheme.buttonColor,\r\n            color: scheme.buttonTextColor\r\n        },\r\n        button4: {\r\n            backgroundColor: hover.button4 ? scheme.buttonHoverColor : scheme.buttonColor,\r\n            color: scheme.buttonTextColor\r\n        },\r\n    };\r\n\r\n    function doHover(idx) {\r\n        hover[Object.keys(hover)[idx]] = true;\r\n        return Object.assign({}, hover);\r\n    }\r\n\r\n    function doUnhover(idx) {\r\n        hover[Object.keys(hover)[idx]] = false;\r\n        return Object.assign({}, hover);\r\n    }\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            {/* Logo */}\r\n            {/*<Link className=\"nav-link\" style={style.button1} onMouseEnter={() => setHover(doHover(0))}\r\n                  onMouseLeave={() => setHover(doUnhover(0))} to=\"/\">\r\n                CEN 3031\r\n            </Link>\r\n            <div className='ml-3 cursor-pointer nav-link' style={style.button2}\r\n                 onMouseEnter={() => setHover(doHover(1))} onMouseLeave={() => setHover(doUnhover(1))}\r\n                 onClick={() => setToggleColor(!toggleColor)}>\r\n                Swap Color Scheme\r\n            </div>*/}\r\n\r\n            {/* Page Links */}\r\n            <div className=\"nav-items\">\r\n                <Link className=\"nav-link\" style={style.button3} onMouseEnter={() => setHover(doHover(2))}\r\n                      onMouseLeave={() => setHover(doUnhover(2))}\r\n                      to='/Home'>Home</Link>\r\n\r\n                <Link className=\"ml-3 nav-link\" style={style.button4} onMouseEnter={() => setHover(doHover(3))}\r\n                      onMouseLeave={() => setHover(doUnhover(3))}\r\n                      to='/Projects'>Projects</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Navbar;","const schemes = {\r\n    first: {\r\n        homePageTitle: '#08bd9a',\r\n        homePageProfessor: '#08bd9a',\r\n        buttonColor: \"#09d3ac\",\r\n        buttonHoverColor: \"#08bd9a\",\r\n        buttonTextColor: \"#000\",\r\n        semesterTitleColor: \"#fff\",\r\n        subtitleText: \"#09D3AC\",\r\n        projectDescText: \"#fff\",\r\n        teamNameColor: \"#09d3ac\",\r\n        projectHRColor: \"linear-gradient(to right, rgba(0, 0, 0, 0), rgba(9, 211, 172, 0.75), rgba(0, 0, 0, 0))\",\r\n        menuItemIcon: \"#09d3ac\"\r\n    },\r\n    second: {\r\n        homePageTitle: 'rgb(226, 143, 65)',\r\n        homePageProfessor: 'rgb(226, 143, 65)',\r\n        buttonColor: \"rgb(0,82,155)\",\r\n        buttonHoverColor: \"rgba(0,82,155, 0.9)\",\r\n        buttonTextColor: \"#fff\",\r\n        semesterTitleColor: \"rgb(226, 143, 65)\", // try orange, then try white\r\n        subtitleText: \"rgb(226, 143, 65)\",\r\n        projectDescText: \"#fff\",\r\n        teamNameColor: \"rgb(108, 154, 195)\",\r\n        projectHRColor: \"linear-gradient(to right, rgba(0, 0, 0, 0), rgb(108, 154, 195), rgba(0, 0, 0, 0))\",\r\n        menuItemIcon: \"rgb(108, 154, 195)\"\r\n    }\r\n};\r\n\r\nexport default schemes;","import React, {createContext, useState} from 'react';\r\nimport { Route, Switch, Redirect  } from 'react-router-dom';\r\nimport Home from \"./views/Home\";\r\nimport ProjectList from \"./views/ProjectList\"\r\nimport NotFound from \"./views/NotFound\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport schemes from './views/themes/themes';\r\n\r\nexport const ThemeContext = createContext(schemes.second);\r\n\r\nconst App = () => {\r\n    const [_schemes, _setSchemes] = useState(schemes.second);\r\n\r\n    return (\r\n        <ThemeContext.Provider value={_schemes}>\r\n            <div style={{backgroundColor: '#424549'}}>\r\n                <Navbar schemes={schemes} setSchemes={_setSchemes}/>\r\n                <Switch>\r\n                    <Route exact path=\"/Home\" component={Home} />\r\n                    <Route exact path=\"/\">\r\n                        <Redirect to=\"/Home\" />\r\n                    </Route>\r\n                    <Route exact path=\"/Projects\">\r\n                        <ProjectList schemes={_schemes}/>\r\n                    </Route>\r\n                    <Route component={NotFound}/>\r\n                </Switch>\r\n            </div>\r\n        </ThemeContext.Provider>\r\n    );\r\n};\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Router basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}