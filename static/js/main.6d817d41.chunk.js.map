{"version":3,"sources":["components/ProjectBox/ProjectBox.js","views/Home.js","components/Sidebar/Sidebar.js","views/ProjectList.js","views/NotFound.js","components/Navbar/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["ProjectBox","bestProjects","slideProperties","duration","transitionDuration","infinite","indicators","arrows","pauseOnHover","Object","values","map","project","i","key","id","className","description","src","images","alt","Home","projects","MenuItem","semesters","semester","classes","useInnerStyles","useState","open","setOpen","projs","setProjects","useEffect","forEach","curr","push","ListItem","button","onClick","menuItem","ListItemIcon","menuItemIcon","ListItemText","primary","length","keys","Collapse","in","timeout","unmountOnExit","Divider","List","component","disablePadding","href","content","inset","generateCollapseMenus","Menu","items","useStyles","appMenu","makeStyles","theme","root","display","drawerPaper","position","whiteSpace","width","paddingTop","spacing","paddingBottom","background","color","overflow","height","flexGrow","container","createStyles","navList","Sidebar","CssBaseline","Drawer","variant","paper","Semester","props","style","data","Projects","name","Project","hrStyle","proj","tas","ta","members","member","image","Image","TransitionsModal","toggleState","setToggle","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropProps","Fade","ProjectList","marginLeft","marginTop","sort","sem1","sem2","sem1Attr","split","sem2Attr","season","year","parseInt","getSemesters","sem","NotFound","Navbar","to","App","backgroundColor","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6d817d41.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Slide} from \"react-slideshow-image\";\r\nimport './ProjectBox.css'\r\n\r\n\r\nfunction ProjectBox({bestProjects}) {\r\n\r\n    const slideProperties = {\r\n        duration: 5000,\r\n        transitionDuration: 500,\r\n        infinite: true,\r\n        indicators: true,\r\n        arrows: true,\r\n        pauseOnHover: true\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            {\r\n                Object.values(bestProjects).map((project, i) => {\r\n                    return(\r\n                        <div key={project.id} className=\"project-card\">\r\n                            <div className=\"project-description\">\r\n                                {project.description}\r\n                            </div>\r\n\r\n                            <div className=\"project-slide\">\r\n                                <Slide {...slideProperties}>\r\n                                    <div className=\"project-image\">\r\n                                        <img src={project.images[0]} alt=\"project\" />\r\n                                    </div>\r\n                                    <div className=\"project-image\">\r\n                                        <img src={project.images[1]} alt=\"project\" />\r\n                                    </div>\r\n                                    <div className=\"project-image\">\r\n                                        <img src={project.images[2]} alt=\"project\" />\r\n                                    </div>\r\n                                </Slide>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectBox;\r\n","import React from 'react';\r\nimport ProjectBox from '../components/ProjectBox/ProjectBox';\r\nimport bestProjects from '../assets/bestProjects.json';\r\n\r\nfunction Home() {\r\n\r\n    return(\r\n        <div>\r\n            <ProjectBox bestProjects={bestProjects.projects[0]}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, {useEffect, useState} from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\n\r\nimport IconExpandLess from '@material-ui/icons/ExpandLess'\r\nimport IconExpandMore from '@material-ui/icons/ExpandMore'\r\n\r\nimport IconLibraryBooks from '@material-ui/icons/LibraryBooks'\r\nimport {createStyles} from \"@material-ui/core\";\r\n\r\nfunction MenuItem({semester: semesters}) {\r\n    const classes = useInnerStyles();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [projs, setProjects] = useState({});\r\n    useEffect(() => {\r\n        const projs = {};\r\n        semesters.projects.forEach(curr => {\r\n            if (projs[curr[\"project-name\"]])\r\n                projs[curr['project-name']].push(curr);\r\n            else\r\n                projs[curr['project-name']] = [curr];\r\n        });\r\n        setProjects(projs);\r\n    }, []);\r\n\r\n    function handleClick() {\r\n        setOpen(!open);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ListItem button onClick={handleClick} className={classes.menuItem}>\r\n                <ListItemIcon className={classes.menuItemIcon}>\r\n                    <IconLibraryBooks/>\r\n                </ListItemIcon>\r\n                <ListItemText primary={semesters.semester}/>\r\n                {open ? <IconExpandLess/> : <IconExpandMore/>}\r\n            </ListItem>\r\n            {\r\n                semesters.projects.length > 0 ?\r\n                    generateCollapseMenus(projs, classes, open, semesters.semester) : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction generateCollapseMenus(projects, classes, open, semester) {\r\n    return (\r\n        <div>\r\n            {\r\n                Object.keys(projects).map(project => {\r\n                    return <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                        <Divider/>\r\n                        <List component=\"div\" disablePadding>\r\n                            <ListItem button component='a' href={'#' + semester + project} className={classes.content}>\r\n                                <ListItemText inset primary={project}/>\r\n                            </ListItem>\r\n                        </List>\r\n                    </Collapse>\r\n                })\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Menu({items}) {\r\n    const classes = useStyles();\r\n    return <List component=\"nav\" className={classes.appMenu} disablePadding>\r\n        {\r\n            items.semesters.map(semester => <MenuItem semester={semester}/>)\r\n        }\r\n    </List>;\r\n}\r\n\r\nfunction Sidebar({items}) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className=\"h-full sticky top-0\">\r\n            <CssBaseline/>\r\n            <Drawer className=\"h-full sticky top-0\" variant='permanent' classes={{\r\n                paper: classes.drawerPaper,\r\n            }}>\r\n                <Menu className=\"h-full sticky top-0\" items={items}/>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    drawerPaper: {\r\n        position: 'absolute',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n        background: '#282b30',\r\n        color: '#fff',\r\n        overflow: 'hidden',\r\n        height: '100vh'\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n        overflow: 'hidden'\r\n    },\r\n}));\r\n\r\nconst useInnerStyles = makeStyles(theme =>\r\n    createStyles({\r\n        appMenu: {\r\n            width: '100%',\r\n            overflow: 'hidden'\r\n        },\r\n        navList: {\r\n            width: drawerWidth,\r\n            overflow: 'hidden'\r\n\r\n        },\r\n        menuItem: {\r\n            width: drawerWidth,\r\n            overflow: 'hidden'\r\n        },\r\n        menuItemIcon: {\r\n            color: '#09d3ac',\r\n            overflow: 'hidden'\r\n        },\r\n    }),\r\n);\r\n\r\nexport default Sidebar;\r\n","import React, {useEffect, useState} from 'react';\r\nimport SideBar from '../components/Sidebar/Sidebar';\r\nimport projects from '../assets/projs.json';\r\nimport '../css/tailwind.css';\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nfunction getSemesters() {\r\n    let semesters = projects.semesters;\r\n    semesters.sort((sem1, sem2) => {\r\n        if (!sem2) return true;\r\n\r\n        const sem1Attr = sem1.semester.split(\" \");\r\n        const sem2Attr = sem2.semester.split(\" \");\r\n        const semesters = {\r\n            \"1\": {\r\n                season: sem1Attr[0],\r\n                year: parseInt(sem1Attr[1])\r\n            },\r\n            \"2\": {\r\n                season: sem2Attr[0],\r\n                year: parseInt(sem2Attr[1])\r\n            }\r\n        };\r\n\r\n        if (semesters['1'].year > semesters['2'].year)\r\n            return -1;\r\n        else if (semesters['1'].year === semesters['2'].year)\r\n            return (semesters['2'].season === \"Spring\" || semesters[\"1\"].season === \"Fall\") ? -1 : 1; // if semester 2 is spring or semester 1 is fall, then we want to sort semester 1 higher\r\n\r\n        return 1;\r\n    });\r\n    return [...semesters];\r\n}\r\n\r\nfunction ProjectList() {\r\n\r\n    return (\r\n        <>\r\n            <SideBar items={projects}/>\r\n            <div style={{overflow: \"hidden\"}}>\r\n                <div style={{\r\n                    width: 'calc(100vw - 240px)',\r\n                    marginLeft: '240px',\r\n                    marginTop: '73.25px',\r\n                    overflow: \"hidden\"\r\n                }}>\r\n                    {\r\n                        getSemesters().map(sem => <Semester data={sem}/>)\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst Semester = (props) => {\r\n    return (\r\n        <div style={{\r\n            'backgroundColor': '#1e2124', 'maxWidth': '75%', 'marginLeft': '12%',\r\n            'marginRight': '2em',\r\n            'marginTop': '2em',\r\n            'color': 'white',\r\n            'paddingTop': '0.05em'\r\n        }}>\r\n\r\n            <h1 style={{'text-align': 'center', \"text-shadow\": \"0 1px 2px #000\"}}>{props.data.semester}</h1>\r\n            <Projects projects={props.data.projects} semester={props.data.semester}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Projects = (props) => {\r\n    const [projs, setProjects] = useState({});\r\n    useEffect(() => {\r\n        const projs = {};\r\n        props.projects.forEach(curr => {\r\n            if (projs[curr[\"project-name\"]])\r\n                projs[curr['project-name']].push(curr);\r\n            else\r\n                projs[curr['project-name']] = [curr];\r\n        });\r\n        setProjects(projs);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                Object.keys(projs).length > 0 ? Object.keys(projs).map(key => <Project\r\n                    name={key} semester={props.semester} description={projs[key][0]['description']}\r\n                    data={projs[key]}/>) : null\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nconst Project = (props) => {\r\n    const hrStyle = {\r\n        'border': 0,\r\n        'height': '1px',\r\n        'background-image': 'linear-gradient(to right, rgba(0, 0, 0, 0), rgba(9, 211, 172, 0.75), rgba(0, 0, 0, 0))'\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div style={{\r\n                'display': 'block',\r\n                'backgroundColor': '#282b30',\r\n                'padding': '20px',\r\n                'color': '#09D3AC',\r\n                \"text-shadow\": \"0 1px 2px rgba(0,0,0,0.4)\"\r\n            }}>\r\n                <h2 id={props.semester + props.name}><span style={{'color': 'white', 'line-height': '0px'}}>Project Name:</span> {props.name}\r\n                </h2>\r\n                <h4><span style={{'color': 'white', 'fontWeight': 'bold'}}>Description: </span>{props.description}</h4>\r\n                {\r\n                    props.data.map(proj => {\r\n                        return <div style={{'color': 'white'}}>\r\n                            <div style={{'textIndent': '2.5em', 'lineHeight': '0.3em', 'marginTop': '2.5em'}}>\r\n                                Teaching Assistants:\r\n                                <div style={{'textIndent': '3em', 'lineHeight': '1.5em'}}>\r\n                                    <ul>\r\n                                        {\r\n                                            proj.tas.map(ta => <li>{ta}</li>)\r\n                                        }\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div style={{'textIndent': '2.5em'}}>\r\n                                Group Members:\r\n                                <div style={{'textIndent': '3em', 'lineHeight': '1.5em'}}>\r\n                                    <ul>\r\n                                        {\r\n                                            proj.members.map(member => <li>{member}</li>)\r\n                                        }\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                'width': '100%',\r\n                                'text-align': 'center',\r\n                                'display': 'grid',\r\n                                'marginTop': '2em',\r\n                                'grid-template-columns': '33.3333% 33.3333% 33.3333%',\r\n                                'grid-gap': '0.5em',\r\n                            }} className='justify-center'>\r\n                                {\r\n                                    proj.images.map(image => <Image image={image}/>)\r\n                                }\r\n                            </div>\r\n                            <br/>\r\n                            <hr style={hrStyle}/>\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nconst Image = ({image}) => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    return <>\r\n        <img onClick={() => setOpen(!open)}\r\n             className='w-full overflow-visible transition duration-300 ease-in-out cursor-pointer border-transparent border border-solid hover:border-gray-400'\r\n             src={image}\r\n             alt='Not found.'/>\r\n        <div className='absolute'>\r\n            <TransitionsModal toggleState={open} image={image} setToggle={setOpen}/>\r\n        </div>\r\n    </>;\r\n};\r\n\r\nfunction TransitionsModal({toggleState, image, setToggle}) {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setToggle(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setOpen(toggleState);\r\n    }, [toggleState]);\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className='flex items-center justify-center'\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={open}>\r\n                    <div className='focus:outline-none shadow-xl'>\r\n                        <img className='transition duration-1000 ease-in-out border-transparent border border-solid border-t-0 border-l-0 border-r-0 hover:border-gray-400 w-full h-full' src={image}/>\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectList;\r\n","const NotFound = () => {\r\n    return \"Page not found\"\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navbar.css';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className = \"header\">\r\n            {/* Logo */}\r\n            <Link className = \"nav-link\" to=\"/\">\r\n                CEN 3031\r\n            </Link>\r\n\r\n            {/* Page Links */}\r\n            <div className = \"nav-items\">\r\n                <Link className = \"nav-link\" to='/Home'>Home</Link>\r\n\r\n                <Link className = \"nav-link\" to='/Projects'>Projects</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { Route, Switch, Redirect  } from 'react-router-dom';\r\nimport Home from \"./views/Home\";\r\nimport ProjectList from \"./views/ProjectList\"\r\nimport NotFound from \"./views/NotFound\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <div style={{backgroundColor: '#424549'}}>\r\n            <Navbar/>\r\n            <Switch>\r\n                <Route exact path=\"/Home\" component={Home} />\r\n                <Route exact path=\"/\">\r\n                    <Redirect to=\"/Home\" />\r\n                </Route>\r\n                <Route exact path=\"/Projects\" component={ProjectList}/>\r\n                <Route component={NotFound}/>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}