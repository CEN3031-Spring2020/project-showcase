{"version":3,"sources":["components/ProjectBox/ProjectBox.js","views/Home.js","components/Sidebar/Sidebar.js","views/ProjectList.js","views/NotFound.js","components/Navbar/Navbar.js","views/themes/themes.js","App.js","serviceWorker.js","index.js"],"names":["ProjectBox","bestProjects","slideProperties","duration","transitionDuration","infinite","indicators","arrows","pauseOnHover","scheme","useContext","ThemeContext","className","style","homePageTitle","title","homePageProfessor","professor","Object","values","projects","map","project","key","id","fontSize","color","teamNameColor","name","description","images","src","alt","Home","MenuItem","currSemester","semester","classes","useInnerStyles","useState","open","setOpen","projs","setProjects","useEffect","forEach","curr","push","ListItem","button","onClick","menuItem","ListItemIcon","menuItemIcon","ListItemText","primary","length","keys","Collapse","in","timeout","unmountOnExit","Divider","List","component","disablePadding","href","content","inset","generateCollapseMenus","Menu","items","useStyles","appMenu","semesters","makeStyles","theme","root","display","drawerPaper","position","whiteSpace","width","paddingTop","spacing","paddingBottom","background","overflow","height","flexGrow","container","createStyles","navList","Sidebar","CssBaseline","Drawer","variant","paper","Semester","props","semesterTitleColor","data","prof","Projects","Project","hrStyle","projectHRColor","projectDescText","subtitleText","proj","index","tas","ta","members","member","image","Image","TransitionsModal","toggleState","setToggle","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropProps","Fade","ProjectList","marginLeft","marginTop","sort","sem1","sem2","sem1Attr","split","sem2Attr","season","year","parseInt","getSemesters","sem","NotFound","Navbar","schemes","setSchemes","button1","button2","button3","button4","hover","setHover","backgroundColor","buttonHoverColor","buttonColor","buttonTextColor","doHover","idx","assign","doUnhover","navbarTextColor","onMouseEnter","onMouseLeave","to","first","second","createContext","App","_schemes","_setSchemes","Provider","value","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.eeb627ad.chunk.js","sourcesContent":["import React, {useContext} from 'react';\nimport {Slide} from \"react-slideshow-image\";\nimport './ProjectBox.css'\nimport {ThemeContext} from \"../../App\";\n\n\nfunction ProjectBox({bestProjects}) {\n\n    const slideProperties = {\n        duration: 5000,\n        transitionDuration: 500,\n        infinite: true,\n        indicators: true,\n        arrows: true,\n        pauseOnHover: true\n    };\n\n    const scheme = useContext(ThemeContext);\n\n    return (\n        <div className='mt-10'>\n            <div style={{'font-size': '24px', 'lineHeight': '12px', \"text-shadow\": \"0 1px 2px rgba(0,0,0,0.47)\"}}\n                 className='italic text-center text-white font-medium mb-5'>\n                <p style={{'color': scheme.homePageTitle}}>{bestProjects.title}</p>\n                <p style={{'color': scheme.homePageProfessor}}>{bestProjects.professor}</p>\n            </div>\n            {\n                Object.values(bestProjects.projects).map((project) => {\n                    return (\n                        <div>\n                            <div key={project.id}\n                                 className=\"p-3 m-10 project-card transition duration-300 ease-in-out border-transparent border border-solid hover:border-gray-400\">\n                                <div className=\"project-description pb-5 pr-5\">\n                                    <div className='pb-2' style={{fontSize: '24px', color: scheme.teamNameColor}}>\n                                        {project.name}\n                                    </div>\n                                    {project.description}\n                                </div>\n\n                                <div className=\"project-slide\">\n                                    <Slide {...slideProperties}>\n                                        {\n                                            project.images.map((src) =>\n                                                <div>\n                                                    <img className=\"project-image\" src={src} alt=\"project\"/>\n                                                </div>\n                                            )\n                                        }\n                                    </Slide>\n                                </div>\n\n                            </div>\n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport default ProjectBox;\n","import React, {useContext} from 'react';\nimport ProjectBox from '../components/ProjectBox/ProjectBox';\nimport bestProjects from '../assets/bestProjects.json';\nimport {ThemeContext} from \"../App\";\n\nfunction Home() {\n    const scheme = useContext(ThemeContext);\n    return (\n        <>\n            <ProjectBox bestProjects={bestProjects}/>\n            <div className='text-center w-full font-normal p-5'>\n                     <span style={{fontSize: '12px', color: scheme.teamNameColor}}>\n                        Site created by: Jonathan Conlin, Dakota Rennemann, and Shaila Patel\n                     </span>\n            </div>\n        </>\n    )\n}\n\nexport default Home;","import React, {useContext, useEffect, useState} from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nimport IconExpandLess from '@material-ui/icons/ExpandLess'\nimport IconExpandMore from '@material-ui/icons/ExpandMore'\n\nimport IconLibraryBooks from '@material-ui/icons/LibraryBooks'\nimport {createStyles} from \"@material-ui/core\";\nimport {ThemeContext} from \"../../App\";\n\nfunction MenuItem({semester: currSemester}) {\n    const classes = useInnerStyles();\n    const [open, setOpen] = useState(false);\n\n    const [projs, setProjects] = useState({});\n    useEffect(() => {\n        const projs = {};\n        currSemester.projects.forEach(curr => {\n            if (projs[curr[\"project-name\"]])\n                projs[curr['project-name']].push(curr);\n            else\n                projs[curr['project-name']] = [curr];\n        });\n        setProjects(projs);\n    }, []);\n\n    function handleClick() {\n        setOpen(!open);\n    }\n    const scheme = useContext(ThemeContext);\n\n    return (\n        <div>\n            <ListItem button onClick={handleClick} className={classes.menuItem}>\n                <ListItemIcon className={classes.menuItemIcon} style={{color: scheme.menuItemIcon}}>\n                    <IconLibraryBooks/>\n                </ListItemIcon>\n                <ListItemText primary={currSemester.semester}/>\n                {open ? <IconExpandLess/> : <IconExpandMore/>}\n            </ListItem>\n            {\n                currSemester.projects.length > 0 ?\n                    generateCollapseMenus(projs, classes, open, currSemester.semester) : null\n            }\n        </div>\n    )\n}\n\nfunction generateCollapseMenus(projects, classes, open, semester) {\n    return (\n        <div>\n            {\n                Object.keys(projects).map(project => {\n                    return <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                        <Divider/>\n                        <List component=\"div\" disablePadding>\n                            <ListItem button component='a' href={'#' + semester + project} className={classes.content}>\n                                <ListItemText inset primary={project}/>\n                            </ListItem>\n                        </List>\n                    </Collapse>\n                })\n            }\n\n        </div>\n    )\n}\n\nfunction Menu({items}) {\n    const classes = useStyles();\n    return <List component=\"nav\" className={classes.appMenu} disablePadding>\n        {\n            items.semesters.map(semester => <MenuItem semester={semester}/>)\n        }\n    </List>;\n}\n\nfunction Sidebar({items}) {\n\n    const classes = useStyles();\n    return (\n        <div className=\"h-full sticky top-0\">\n            <CssBaseline/>\n            <Drawer className=\"h-full sticky top-0\" variant='permanent' classes={{\n                paper: classes.drawerPaper,\n            }}>\n                <Menu className=\"h-full sticky top-0\" items={items}/>\n            </Drawer>\n        </div>\n    );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    drawerPaper: {\n        position: 'absolute',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n        background: '#282b30',\n        color: '#fff',\n        overflow: 'hidden',\n        height: '100vh'\n    },\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n        overflow: 'hidden'\n    },\n}));\n\nconst useInnerStyles = makeStyles(theme =>\n    createStyles({\n        appMenu: {\n            width: '100%',\n            overflow: 'hidden'\n        },\n        navList: {\n            width: drawerWidth,\n            overflow: 'hidden'\n\n        },\n        menuItem: {\n            width: drawerWidth,\n            overflow: 'hidden'\n        },\n        menuItemIcon: {\n            overflow: 'hidden'\n        },\n    }),\n);\n\nexport default Sidebar;\n","import React, {useContext, useEffect, useState} from 'react';\nimport SideBar from '../components/Sidebar/Sidebar';\nimport projects from '../assets/projs.json';\nimport '../css/tailwind.css';\nimport Modal from \"@material-ui/core/Modal\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {ThemeContext} from \"../App\";\n\nfunction getSemesters() {\n    let semesters = projects.semesters;\n    semesters.sort((sem1, sem2) => {\n        if (!sem2) return true;\n\n        const sem1Attr = sem1.semester.split(\" \");\n        const sem2Attr = sem2.semester.split(\" \");\n        const semesters = {\n            \"1\": {\n                season: sem1Attr[0],\n                year: parseInt(sem1Attr[1])\n            },\n            \"2\": {\n                season: sem2Attr[0],\n                year: parseInt(sem2Attr[1])\n            }\n        };\n\n        if (semesters['1'].year > semesters['2'].year)\n            return -1;\n        else if (semesters['1'].year === semesters['2'].year)\n            return (semesters['2'].season === \"Spring\" || semesters[\"1\"].season === \"Fall\") ? -1 : 1; // if semester 2 is spring or semester 1 is fall, then we want to sort semester 1 higher\n\n        return 1;\n    });\n    return [...semesters];\n}\n\nfunction ProjectList() {\n\n    return (\n        <>\n            <SideBar items={projects}/>\n            <div style={{overflow: \"hidden\"}}>\n                <div style={{\n                    width: 'calc(100vw - 240px)',\n                    marginLeft: '240px',\n                    marginTop: '73.25px',\n                    overflow: \"hidden\"\n                }}>\n                    {\n                        getSemesters().map(sem => <Semester data={sem}/>)\n                    }\n                </div>\n            </div>\n        </>\n    );\n}\n\nconst Semester = (props) => {\n    const scheme = useContext(ThemeContext);\n    return (\n        <div style={{\n            'backgroundColor': '#1e2124', 'maxWidth': '75%', 'marginLeft': '12%',\n            'marginRight': '2em',\n            'marginTop': '2em',\n            'color': scheme.semesterTitleColor,\n            'paddingTop': '0.05em'\n        }}>\n            {/*University of Florida CEN 3031 Software Engineering Class Web Application Projects */}\n\n            <h1 style={{'text-align': 'center', \"text-shadow\": \"0 1px 2px #000\"}}\n                className='pr-4 pl-4'>{props.data.semester} Class Projects</h1>\n            <h3 style={{'text-align': 'center', \"text-shadow\": \"0 1px 2px #000\"}}\n                className='pr-4 pl-4'>{props.data.professor}</h3>\n            <Projects projects={props.data.projects} semester={props.data.semester} prof={props.data.professor}/>\n        </div>\n    );\n};\n\nconst Projects = (props) => {\n    const [projs, setProjects] = useState({});\n    useEffect(() => {\n        const projs = {};\n        props.projects.forEach(curr => {\n            if (projs[curr[\"project-name\"]])\n                projs[curr['project-name']].push(curr);\n            else\n                projs[curr['project-name']] = [curr];\n        });\n        setProjects(projs);\n    }, []);\n\n    return (\n        <>\n            {\n                Object.keys(projs).length > 0 ? Object.keys(projs).map(key => <Project name={key}\n                                                                                       semester={props.semester}\n                                                                                       prof={props.prof}\n                                                                                       description={projs[key][0]['description']}\n                                                                                       data={projs[key]}/>) : null\n            }\n        </>\n    )\n};\n\nconst Project = (props) => {\n    const scheme = useContext(ThemeContext);\n    const hrStyle = {\n        'border': 0,\n        'height': '1px',\n        'background-image': scheme.projectHRColor\n    };\n\n    return (\n        <>\n            <div style={{\n                'display': 'block',\n                'backgroundColor': '#282b30',\n                'padding': '20px',\n                'color': scheme.projectDescText,\n                \"text-shadow\": \"0 1px 2px rgba(0,0,0,0.4)\"\n            }}>\n                <h2 id={props.semester + props.name}><span style={{'color': scheme.subtitleText, 'line-height': '0px'}}>Project Name:</span> {props.name}\n                </h2>\n                <h4><span\n                    style={{'color': scheme.subtitleText, 'fontWeight': 'bold'}}>Description: </span>\n                </h4>\n                <p className='pl-5 pr-5'>{props.description}</p>\n                {\n                    props.data.map((proj, index) => {\n                        return <div style={{'color': 'white'}}>\n                            <div className='text-center justify-center items-center content-center'>\n                                <div className='pt-6'>\n                                    <p style={{\n                                        \"font-size\": \"24px\",\n                                        \"text-shadow\": \"1px 2px 2px rgba(0,0,0,0.4)\",\n                                        \"color\": scheme.teamNameColor,\n                                        'backgroundColor': 'rgba(30,33,36, 0.4)'\n                                    }}\n                                       className='p-1 underline border border-solid border-b-0 border-t-0 border-l-2 border-r-0'>Team {index + 1}</p>\n                                </div>\n                            </div>\n                            <div style={{'textIndent': '2.5em', 'lineHeight': '0.3em', 'marginTop': '2.5em'}}>\n                                Teaching Assistants:\n                                <div style={{'textIndent': '3em', 'lineHeight': '1.5em'}}>\n                                    <ul>\n                                        {\n                                            proj.tas.map(ta => <li>{ta}</li>)\n                                        }\n                                    </ul>\n                                </div>\n                            </div>\n\n                            <div style={{'textIndent': '2.5em'}}>\n                                Group Members:\n                                <div style={{'textIndent': '3em', 'lineHeight': '1.5em'}}>\n                                    <ul>\n                                        {\n                                            proj.members.map(member => <li>{member}</li>)\n                                        }\n                                    </ul>\n                                </div>\n                            </div>\n\n                            <div style={{\n                                'width': '100%',\n                                'text-align': 'center',\n                                'display': 'grid',\n                                'marginTop': '2em',\n                                'grid-template-columns': '33.3333% 33.3333% 33.3333%',\n                                'grid-gap': '0.5em',\n                            }} className='justify-center'>\n                                {\n                                    proj.images.map(image => <Image className='w-full' image={image}/>)\n                                }\n                            </div>\n                            <br/>\n                            <hr style={hrStyle}/>\n                        </div>\n                    })\n                }\n            </div>\n        </>\n    )\n};\n\nconst Image = ({image}) => {\n    const [open, setOpen] = useState(false);\n\n    return <>\n        <div onClick={() => setOpen(!open)}\n             style={{'height': '20vh', 'background-image': `url(\\'${image}\\')`}}\n             className='w-full bg-cover overflow-visible transition duration-300 ease-in-out cursor-pointer border-transparent border border-solid hover:border-gray-400'\n             alt='Not found.'/>\n        <div className='absolute'>\n            <TransitionsModal toggleState={open} image={image} setToggle={setOpen}/>\n        </div>\n    </>;\n};\n\nfunction TransitionsModal({toggleState, image, setToggle}) {\n    const [open, setOpen] = useState(false);\n\n    const handleClose = () => {\n        setOpen(false);\n        setToggle(false);\n    };\n\n    useEffect(() => {\n        setOpen(toggleState);\n    }, [toggleState]);\n\n    return (\n        <div>\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className='flex items-center justify-center'\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <div className='focus:outline-none shadow-xl'>\n                        <img\n                            className='transition duration-1000 ease-in-out border-transparent border border-solid border-t-0 border-l-0 border-r-0 hover:border-gray-400 w-full h-full'\n                            src={image}/>\n                    </div>\n                </Fade>\n            </Modal>\n        </div>\n    );\n}\n\nexport default ProjectList;\n","const NotFound = () => {\n    return \"Page not found\"\n}\n\nexport default NotFound;","import React, {useContext, useEffect, useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport './Navbar.css';\nimport {ThemeContext} from \"../../App\";\n\nconst Navbar = ({schemes, setSchemes}) => {\n    // const [toggleColor, setToggleColor] = useState(localStorage.getItem('toggleState') ? JSON.parse(localStorage.getItem('toggleState')).currToggle : false);\n    const [hover, setHover] = useState({\n        button1: false,\n        button2: false,\n        button3: false,\n        button4: false\n    });\n\n    /*useEffect(() => {\n        if (toggleColor) {\n            setSchemes(schemes.second);\n        } else {\n            setSchemes(schemes.first);\n        }\n        localStorage.setItem('toggleState', JSON.stringify({currToggle: toggleColor}));\n    }, [toggleColor]);*/\n\n    const scheme = useContext(ThemeContext);\n\n    const style = {\n        button1: {\n            backgroundColor: hover.button1 ? scheme.buttonHoverColor : scheme.buttonColor,\n            color: scheme.buttonTextColor\n        },\n        button2: {\n            backgroundColor: hover.button2 ? scheme.buttonHoverColor : scheme.buttonColor,\n            color: scheme.buttonTextColor\n        },\n        button3: {\n            backgroundColor: hover.button3 ? scheme.buttonHoverColor : scheme.buttonColor,\n            color: scheme.buttonTextColor\n        },\n        button4: {\n            backgroundColor: hover.button4 ? scheme.buttonHoverColor : scheme.buttonColor,\n            color: scheme.buttonTextColor\n        },\n    };\n\n    function doHover(idx) {\n        hover[Object.keys(hover)[idx]] = true;\n        return Object.assign({}, hover);\n    }\n\n    function doUnhover(idx) {\n        hover[Object.keys(hover)[idx]] = false;\n        return Object.assign({}, hover);\n    }\n\n    return (\n        <div className=\"header\">\n            {/* Logo */}\n            {/*<Link className=\"nav-link\" style={style.button1} onMouseEnter={() => setHover(doHover(0))}\n                  onMouseLeave={() => setHover(doUnhover(0))} to=\"/\">\n                CEN 3031\n            </Link>\n            <div className='ml-3 cursor-pointer nav-link' style={style.button2}\n                 onMouseEnter={() => setHover(doHover(1))} onMouseLeave={() => setHover(doUnhover(1))}\n                 onClick={() => setToggleColor(!toggleColor)}>\n                Swap Color Scheme\n            </div>*/}\n            <div className='flex flex-wrap w-1/4 p-3 font-medium' style={{width: '240'}}>\n                <span style={{fontSize: '24px', color: scheme.navbarTextColor}}>\n                Web Application Project Showcase\n                </span>\n            </div>\n\n            {/* Page Links */}\n            <div className=\"nav-items\">\n                <Link className=\"nav-link\" style={style.button3} onMouseEnter={() => setHover(doHover(2))}\n                      onMouseLeave={() => setHover(doUnhover(2))}\n                      to='/Home'>Home</Link>\n\n                <Link className=\"ml-3 nav-link\" style={style.button4} onMouseEnter={() => setHover(doHover(3))}\n                      onMouseLeave={() => setHover(doUnhover(3))}\n                      to='/Projects'>Projects</Link>\n            </div>\n        </div>\n    )\n};\n\nexport default Navbar;","const schemes = {\n    first: {\n        navbarTextColor: '#08bd9a',\n        homePageTitle: '#08bd9a',\n        homePageProfessor: '#08bd9a',\n        buttonColor: \"#09d3ac\",\n        buttonHoverColor: \"#08bd9a\",\n        buttonTextColor: \"#000\",\n        semesterTitleColor: \"#fff\",\n        subtitleText: \"#09D3AC\",\n        projectDescText: \"#fff\",\n        teamNameColor: \"#09d3ac\",\n        projectHRColor: \"linear-gradient(to right, rgba(0, 0, 0, 0), rgba(9, 211, 172, 0.75), rgba(0, 0, 0, 0))\",\n        menuItemIcon: \"#09d3ac\"\n    },\n    second: {\n        navbarTextColor: 'rgb(226, 143, 65)',\n        homePageTitle: 'rgb(226, 143, 65)',\n        homePageProfessor: 'rgb(226, 143, 65)',\n        buttonColor: \"rgb(0,82,155)\",\n        buttonHoverColor: \"rgba(0,82,155, 0.9)\",\n        buttonTextColor: \"#fff\",\n        semesterTitleColor: \"rgb(226, 143, 65)\", // try orange, then try white\n        subtitleText: \"rgb(226, 143, 65)\",\n        projectDescText: \"#fff\",\n        teamNameColor: \"rgb(108, 154, 195)\",\n        projectHRColor: \"linear-gradient(to right, rgba(0, 0, 0, 0), rgb(108, 154, 195), rgba(0, 0, 0, 0))\",\n        menuItemIcon: \"rgb(108, 154, 195)\"\n    }\n};\n\nexport default schemes;","import React, {createContext, useState} from 'react';\nimport { Route, Switch, Redirect  } from 'react-router-dom';\nimport Home from \"./views/Home\";\nimport ProjectList from \"./views/ProjectList\"\nimport NotFound from \"./views/NotFound\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport schemes from './views/themes/themes';\n\nexport const ThemeContext = createContext(schemes.first);\n\nconst App = () => {\n    const [_schemes, _setSchemes] = useState(schemes.second);\n\n    return (\n        <ThemeContext.Provider value={_schemes}>\n            <div style={{backgroundColor: '#424549'}}>\n                <Navbar schemes={schemes} setSchemes={_setSchemes}/>\n                <Switch>\n                    <Route exact path=\"/Home\" component={Home} />\n                    <Route exact path=\"/\">\n                        <Redirect to=\"/Home\" />\n                    </Route>\n                    <Route exact path=\"/Projects\">\n                        <ProjectList schemes={_schemes}/>\n                    </Route>\n                    <Route component={NotFound}/>\n                </Switch>\n            </div>\n        </ThemeContext.Provider>\n    );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}